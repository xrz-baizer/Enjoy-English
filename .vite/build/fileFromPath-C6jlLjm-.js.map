{"version":3,"file":"fileFromPath-C6jlLjm-.js","sources":["../../node_modules/node-domexception/index.js","../../node_modules/formdata-node/lib/esm/isPlainObject.js","../../node_modules/formdata-node/lib/esm/fileFromPath.js"],"sourcesContent":["/*! node-domexception. MIT License. Jimmy WÃ¤rting <https://jimmy.warting.se/opensource> */\n\nif (!globalThis.DOMException) {\n  try {\n    const { MessageChannel } = require('worker_threads'),\n    port = new MessageChannel().port1,\n    ab = new ArrayBuffer()\n    port.postMessage(ab, [ab, ab])\n  } catch (err) {\n    err.constructor.name === 'DOMException' && (\n      globalThis.DOMException = err.constructor\n    )\n  }\n}\n\nmodule.exports = globalThis.DOMException\n","const getType = (value) => (Object.prototype.toString.call(value).slice(8, -1).toLowerCase());\nfunction isPlainObject(value) {\n    if (getType(value) !== \"object\") {\n        return false;\n    }\n    const pp = Object.getPrototypeOf(value);\n    if (pp === null || pp === undefined) {\n        return true;\n    }\n    const Ctor = pp.constructor && pp.constructor.toString();\n    return Ctor === Object.toString();\n}\nexport default isPlainObject;\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _FileFromPath_path, _FileFromPath_start;\nimport { statSync, createReadStream, promises as fs } from \"fs\";\nimport { basename } from \"path\";\nimport DOMException from \"node-domexception\";\nimport { File } from \"./File.js\";\nimport isPlainObject from \"./isPlainObject.js\";\nexport * from \"./isFile.js\";\nconst MESSAGE = \"The requested file could not be read, \"\n    + \"typically due to permission problems that have occurred after a reference \"\n    + \"to a file was acquired.\";\nclass FileFromPath {\n    constructor(input) {\n        _FileFromPath_path.set(this, void 0);\n        _FileFromPath_start.set(this, void 0);\n        __classPrivateFieldSet(this, _FileFromPath_path, input.path, \"f\");\n        __classPrivateFieldSet(this, _FileFromPath_start, input.start || 0, \"f\");\n        this.name = basename(__classPrivateFieldGet(this, _FileFromPath_path, \"f\"));\n        this.size = input.size;\n        this.lastModified = input.lastModified;\n    }\n    slice(start, end) {\n        return new FileFromPath({\n            path: __classPrivateFieldGet(this, _FileFromPath_path, \"f\"),\n            lastModified: this.lastModified,\n            size: end - start,\n            start\n        });\n    }\n    async *stream() {\n        const { mtimeMs } = await fs.stat(__classPrivateFieldGet(this, _FileFromPath_path, \"f\"));\n        if (mtimeMs > this.lastModified) {\n            throw new DOMException(MESSAGE, \"NotReadableError\");\n        }\n        if (this.size) {\n            yield* createReadStream(__classPrivateFieldGet(this, _FileFromPath_path, \"f\"), {\n                start: __classPrivateFieldGet(this, _FileFromPath_start, \"f\"),\n                end: __classPrivateFieldGet(this, _FileFromPath_start, \"f\") + this.size - 1\n            });\n        }\n    }\n    get [(_FileFromPath_path = new WeakMap(), _FileFromPath_start = new WeakMap(), Symbol.toStringTag)]() {\n        return \"File\";\n    }\n}\nfunction createFileFromPath(path, { mtimeMs, size }, filenameOrOptions, options = {}) {\n    let filename;\n    if (isPlainObject(filenameOrOptions)) {\n        [options, filename] = [filenameOrOptions, undefined];\n    }\n    else {\n        filename = filenameOrOptions;\n    }\n    const file = new FileFromPath({ path, size, lastModified: mtimeMs });\n    if (!filename) {\n        filename = file.name;\n    }\n    return new File([file], filename, {\n        ...options, lastModified: file.lastModified\n    });\n}\nexport function fileFromPathSync(path, filenameOrOptions, options = {}) {\n    const stats = statSync(path);\n    return createFileFromPath(path, stats, filenameOrOptions, options);\n}\nexport async function fileFromPath(path, filenameOrOptions, options) {\n    const stats = await fs.stat(path);\n    return createFileFromPath(path, stats, filenameOrOptions, options);\n}\n"],"names":["MessageChannel","port","ab","err","nodeDomexception","getType","value","isPlainObject","pp","__classPrivateFieldSet","receiver","state","kind","f","__classPrivateFieldGet","_FileFromPath_path","_FileFromPath_start","MESSAGE","FileFromPath","input","basename","start","end","mtimeMs","fs","DOMException","createReadStream","createFileFromPath","path","size","filenameOrOptions","options","filename","file","File","fileFromPath","stats"],"mappings":"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","x_google_ignoreList":[0,1,2]}