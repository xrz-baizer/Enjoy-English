{"version":3,"file":"api_chain-DZY_LD4u.js","sources":["../../../../node_modules/langchain/dist/chains/api/prompts.js","../../../../node_modules/langchain/dist/chains/api/api_chain.js"],"sourcesContent":["/* eslint-disable spaced-comment */\nimport { PromptTemplate } from \"@langchain/core/prompts\";\nexport const API_URL_RAW_PROMPT_TEMPLATE = `You are given the below API Documentation:\n{api_docs}\nUsing this documentation, generate the full API url to call for answering the user question.\nYou should build the API url in order to get a response that is as short as possible, while still getting the necessary information to answer the question. Pay attention to deliberately exclude any unnecessary pieces of data in the API call.\n\nQuestion:{question}\nAPI url:`;\nexport const API_URL_PROMPT_TEMPLATE = /* #__PURE__ */ new PromptTemplate({\n    inputVariables: [\"api_docs\", \"question\"],\n    template: API_URL_RAW_PROMPT_TEMPLATE,\n});\nexport const API_RESPONSE_RAW_PROMPT_TEMPLATE = `${API_URL_RAW_PROMPT_TEMPLATE} {api_url}\n\nHere is the response from the API:\n\n{api_response}\n\nSummarize this response to answer the original question.\n\nSummary:`;\nexport const API_RESPONSE_PROMPT_TEMPLATE = /* #__PURE__ */ new PromptTemplate({\n    inputVariables: [\"api_docs\", \"question\", \"api_url\", \"api_response\"],\n    template: API_RESPONSE_RAW_PROMPT_TEMPLATE,\n});\n","import { BaseChain } from \"../base.js\";\nimport { LLMChain } from \"../llm_chain.js\";\nimport { API_URL_PROMPT_TEMPLATE, API_RESPONSE_PROMPT_TEMPLATE, } from \"./prompts.js\";\n/**\n * Class that extends BaseChain and represents a chain specifically\n * designed for making API requests and processing API responses.\n */\nexport class APIChain extends BaseChain {\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"apiAnswerChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiRequestChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiDocs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"question\"\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"output\"\n        });\n        this.apiRequestChain = fields.apiRequestChain;\n        this.apiAnswerChain = fields.apiAnswerChain;\n        this.apiDocs = fields.apiDocs;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.outputKey = fields.outputKey ?? this.outputKey;\n        this.headers = fields.headers ?? this.headers;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        const question = values[this.inputKey];\n        const api_url = await this.apiRequestChain.predict({ question, api_docs: this.apiDocs }, runManager?.getChild(\"request\"));\n        const res = await fetch(api_url, { headers: this.headers });\n        const api_response = await res.text();\n        const answer = await this.apiAnswerChain.predict({ question, api_docs: this.apiDocs, api_url, api_response }, runManager?.getChild(\"response\"));\n        return { [this.outputKey]: answer };\n    }\n    _chainType() {\n        return \"api_chain\";\n    }\n    static async deserialize(data) {\n        const { api_request_chain, api_answer_chain, api_docs } = data;\n        if (!api_request_chain) {\n            throw new Error(\"LLMChain must have api_request_chain\");\n        }\n        if (!api_answer_chain) {\n            throw new Error(\"LLMChain must have api_answer_chain\");\n        }\n        if (!api_docs) {\n            throw new Error(\"LLMChain must have api_docs\");\n        }\n        return new APIChain({\n            apiAnswerChain: await LLMChain.deserialize(api_answer_chain),\n            apiRequestChain: await LLMChain.deserialize(api_request_chain),\n            apiDocs: api_docs,\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            api_answer_chain: this.apiAnswerChain.serialize(),\n            api_request_chain: this.apiRequestChain.serialize(),\n            api_docs: this.apiDocs,\n        };\n    }\n    /**\n     * Static method to create a new APIChain from a BaseLanguageModel and API\n     * documentation.\n     * @param llm BaseLanguageModel instance.\n     * @param apiDocs API documentation.\n     * @param options Optional configuration options for the APIChain.\n     * @returns New APIChain instance.\n     */\n    static fromLLMAndAPIDocs(llm, apiDocs, options = {}) {\n        const { apiUrlPrompt = API_URL_PROMPT_TEMPLATE, apiResponsePrompt = API_RESPONSE_PROMPT_TEMPLATE, } = options;\n        const apiRequestChain = new LLMChain({ prompt: apiUrlPrompt, llm });\n        const apiAnswerChain = new LLMChain({ prompt: apiResponsePrompt, llm });\n        return new this({\n            apiAnswerChain,\n            apiRequestChain,\n            apiDocs,\n            ...options,\n        });\n    }\n}\n"],"names":["API_URL_RAW_PROMPT_TEMPLATE","API_URL_PROMPT_TEMPLATE","PromptTemplate","API_RESPONSE_RAW_PROMPT_TEMPLATE","API_RESPONSE_PROMPT_TEMPLATE","APIChain","BaseChain","fields","values","runManager","question","api_url","api_response","answer","data","api_request_chain","api_answer_chain","api_docs","LLMChain","llm","apiDocs","options","apiUrlPrompt","apiResponsePrompt","apiRequestChain","apiAnswerChain"],"mappings":"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","x_google_ignoreList":[0,1]}