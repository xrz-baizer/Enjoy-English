{"version":3,"file":"comic-book-nSTUk5ZP.js","sources":["../../../../node_modules/foliate-js/comic-book.js"],"sourcesContent":["export const makeComicBook = ({ entries, loadBlob, getSize }, file) => {\n    const cache = new Map()\n    const urls = new Map()\n    const load = async name => {\n        if (cache.has(name)) return cache.get(name)\n        const src = URL.createObjectURL(await loadBlob(name))\n        const page = URL.createObjectURL(\n            new Blob([`<!DOCTYPE html><html><head><meta charset=\"utf-8\"></head><body style=\"margin: 0\"><img src=\"${src}\"></body></html>`], { type: 'text/html' }))\n        urls.set(name, [src, page])\n        cache.set(name, page)\n        return page\n    }\n    const unload = name => {\n        urls.get(name)?.forEach?.(url => URL.revokeObjectURL(url))\n        urls.delete(name)\n        cache.delete(name)\n    }\n\n    const exts = ['.jpg', '.jpeg', '.png', '.gif', '.bmp', '.webp', '.svg', '.jxl', '.avif']\n    const files = entries\n        .map(entry => entry.filename)\n        .filter(name => exts.some(ext => name.endsWith(ext)))\n        .sort()\n    if (!files.length) throw new Error('No supported image files in archive')\n\n    const book = {}\n    book.getCover = () => loadBlob(files[0])\n    book.metadata = { title: file.name }\n    book.sections = files.map(name => ({\n        id: name,\n        load: () => load(name),\n        unload: () => unload(name),\n        size: getSize(name),\n    }))\n    book.toc = files.map(name => ({ label: name, href: name }))\n    book.rendition = { layout: 'pre-paginated' }\n    book.resolveHref = href => ({ index: book.sections.findIndex(s => s.id === href) })\n    book.splitTOCHref = href => [href, null]\n    book.getTOCFragment = doc => doc.documentElement\n    book.destroy = () => {\n        for (const arr of urls.values())\n            for (const url of arr) URL.revokeObjectURL(url)\n    }\n    return book\n}\n"],"names":["makeComicBook","entries","loadBlob","getSize","file","cache","urls","load","name","src","page","unload","url","exts","files","entry","ext","book","href","s","doc","arr"],"mappings":"AAAY,MAACA,EAAgB,CAAC,CAAE,QAAAC,EAAS,SAAAC,EAAU,QAAAC,CAAO,EAAIC,IAAS,CACnE,MAAMC,EAAQ,IAAI,IACZC,EAAO,IAAI,IACXC,EAAO,MAAMC,GAAQ,CACvB,GAAIH,EAAM,IAAIG,CAAI,EAAG,OAAOH,EAAM,IAAIG,CAAI,EAC1C,MAAMC,EAAM,IAAI,gBAAgB,MAAMP,EAASM,CAAI,CAAC,EAC9CE,EAAO,IAAI,gBACb,IAAI,KAAK,CAAC,6FAA6FD,CAAG,kBAAkB,EAAG,CAAE,KAAM,YAAa,CAAC,EACzJ,OAAAH,EAAK,IAAIE,EAAM,CAACC,EAAKC,CAAI,CAAC,EAC1BL,EAAM,IAAIG,EAAME,CAAI,EACbA,CACX,EACMC,EAASH,GAAQ,CACnBF,EAAK,IAAIE,CAAI,GAAG,UAAUI,GAAO,IAAI,gBAAgBA,CAAG,CAAC,EACzDN,EAAK,OAAOE,CAAI,EAChBH,EAAM,OAAOG,CAAI,CACrB,EAEMK,EAAO,CAAC,OAAQ,QAAS,OAAQ,OAAQ,OAAQ,QAAS,OAAQ,OAAQ,OAAO,EACjFC,EAAQb,EACT,IAAIc,GAASA,EAAM,QAAQ,EAC3B,OAAOP,GAAQK,EAAK,KAAKG,GAAOR,EAAK,SAASQ,CAAG,CAAC,CAAC,EACnD,KAAI,EACT,GAAI,CAACF,EAAM,OAAQ,MAAM,IAAI,MAAM,qCAAqC,EAExE,MAAMG,EAAO,CAAA,EACb,OAAAA,EAAK,SAAW,IAAMf,EAASY,EAAM,CAAC,CAAC,EACvCG,EAAK,SAAW,CAAE,MAAOb,EAAK,IAAI,EAClCa,EAAK,SAAWH,EAAM,IAAIN,IAAS,CAC/B,GAAIA,EACJ,KAAM,IAAMD,EAAKC,CAAI,EACrB,OAAQ,IAAMG,EAAOH,CAAI,EACzB,KAAML,EAAQK,CAAI,CAC1B,EAAM,EACFS,EAAK,IAAMH,EAAM,IAAIN,IAAS,CAAE,MAAOA,EAAM,KAAMA,GAAO,EAC1DS,EAAK,UAAY,CAAE,OAAQ,eAAe,EAC1CA,EAAK,YAAcC,IAAS,CAAE,MAAOD,EAAK,SAAS,UAAUE,GAAKA,EAAE,KAAOD,CAAI,CAAC,GAChFD,EAAK,aAAeC,GAAQ,CAACA,EAAM,IAAI,EACvCD,EAAK,eAAiBG,GAAOA,EAAI,gBACjCH,EAAK,QAAU,IAAM,CACjB,UAAWI,KAAOf,EAAK,OAAM,EACzB,UAAWM,KAAOS,EAAK,IAAI,gBAAgBT,CAAG,CACtD,EACOK,CACX","x_google_ignoreList":[0]}