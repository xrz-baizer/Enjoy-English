{"version":3,"file":"fb2-BI95Dv4-.js","sources":["../../../../node_modules/foliate-js/fb2.js"],"sourcesContent":["const normalizeWhitespace = str => str ? str\n    .replace(/[\\t\\n\\f\\r ]+/g, ' ')\n    .replace(/^[\\t\\n\\f\\r ]+/, '')\n    .replace(/[\\t\\n\\f\\r ]+$/, '') : ''\nconst getElementText = el => normalizeWhitespace(el?.textContent)\n\nconst NS = {\n    XLINK: 'http://www.w3.org/1999/xlink',\n    EPUB: 'http://www.idpf.org/2007/ops',\n}\n\nconst MIME = {\n    XML: 'application/xml',\n    XHTML: 'application/xhtml+xml',\n}\n\nconst STYLE = {\n    'strong': ['strong', 'self'],\n    'emphasis': ['em', 'self'],\n    'style': ['span', 'self'],\n    'a': 'anchor',\n    'strikethrough': ['s', 'self'],\n    'sub': ['sub', 'self'],\n    'sup': ['sup', 'self'],\n    'code': ['code', 'self'],\n    'image': 'image',\n}\n\nconst TABLE = {\n    'tr': ['tr', {\n        'th': ['th', STYLE, ['colspan', 'rowspan', 'align', 'valign']],\n        'td': ['td', STYLE, ['colspan', 'rowspan', 'align', 'valign']],\n    }, ['align']],\n}\n\nconst POEM = {\n    'epigraph': ['blockquote'],\n    'subtitle': ['h2', STYLE],\n    'text-author': ['p', STYLE],\n    'date': ['p', STYLE],\n    'stanza': 'stanza',\n}\n\nconst SECTION = {\n    'title': ['header', {\n        'p': ['h1', STYLE],\n        'empty-line': ['br'],\n    }],\n    'epigraph': ['blockquote', 'self'],\n    'image': 'image',\n    'annotation': ['aside'],\n    'section': ['section', 'self'],\n    'p': ['p', STYLE],\n    'poem': ['blockquote', POEM],\n    'subtitle': ['h2', STYLE],\n    'cite': ['blockquote', 'self'],\n    'empty-line': ['br'],\n    'table': ['table', TABLE],\n    'text-author': ['p', STYLE],\n}\nPOEM['epigraph'].push(SECTION)\n\nconst BODY = {\n    'image': 'image',\n    'title': ['section', {\n        'p': ['h1', STYLE],\n        'empty-line': ['br'],\n    }],\n    'epigraph': ['section', SECTION],\n    'section': ['section', SECTION],\n}\n\nclass FB2Converter {\n    constructor(fb2) {\n        this.fb2 = fb2\n        this.doc = document.implementation.createDocument(NS.XHTML, 'html')\n        // use this instead of `getElementById` to allow images like\n        // `<image l:href=\"#img1.jpg\" id=\"img1.jpg\" />`\n        this.bins = new Map(Array.from(this.fb2.getElementsByTagName('binary'),\n            el => [el.id, el]))\n    }\n    getImageSrc(el) {\n        const href = el.getAttributeNS(NS.XLINK, 'href')\n        if (!href) return 'data:,'\n        const [, id] = href.split('#')\n        if (!id) return href\n        const bin = this.bins.get(id)\n        return bin\n            ? `data:${bin.getAttribute('content-type')};base64,${bin.textContent}`\n            : href\n    }\n    image(node) {\n        const el = this.doc.createElement('img')\n        el.alt = node.getAttribute('alt')\n        el.title = node.getAttribute('title')\n        el.setAttribute('src', this.getImageSrc(node))\n        return el\n    }\n    anchor(node) {\n        const el = this.convert(node, { 'a': ['a', STYLE] })\n        el.setAttribute('href', node.getAttributeNS(NS.XLINK, 'href'))\n        if (node.getAttribute('type') === 'note')\n            el.setAttributeNS(NS.EPUB, 'epub:type', 'noteref')\n        return el\n    }\n    stanza(node) {\n        const el = this.convert(node, {\n            'stanza': ['p', {\n                'title': ['header', {\n                    'p': ['strong', STYLE],\n                    'empty-line': ['br'],\n                }],\n                'subtitle': ['p', STYLE],\n            }],\n        })\n        for (const child of node.children) if (child.nodeName === 'v') {\n            el.append(this.doc.createTextNode(child.textContent))\n            el.append(this.doc.createElement('br'))\n        }\n        return el\n    }\n    convert(node, def) {\n        // not an element; return text content\n        if (node.nodeType === 3) return this.doc.createTextNode(node.textContent)\n        if (node.nodeType === 4) return this.doc.createCDATASection(node.textContent)\n        if (node.nodeType === 8) return this.doc.createComment(node.textContent)\n\n        const d = def?.[node.nodeName]\n        if (!d) return null\n        if (typeof d === 'string') return this[d](node)\n\n        const [name, opts, attrs] = d\n        const el = this.doc.createElement(name)\n\n        // copy the ID, and set class name from original element name\n        if (node.id) el.id = node.id\n        el.classList.add(node.nodeName)\n\n        // copy attributes\n        if (Array.isArray(attrs)) for (const attr of attrs) {\n            const value = node.getAttribute(attr)\n            if (value) el.setAttribute(attr, value)\n        }\n\n        // process child elements recursively\n        const childDef = opts === 'self' ? def : opts\n        let child = node.firstChild\n        while (child) {\n            const childEl = this.convert(child, childDef)\n            if (childEl) el.append(childEl)\n            child = child.nextSibling\n        }\n        return el\n    }\n}\n\nconst parseXML = async blob => {\n    const buffer = await blob.arrayBuffer()\n    const str = new TextDecoder('utf-8').decode(buffer)\n    const parser = new DOMParser()\n    const doc = parser.parseFromString(str, MIME.XML)\n    const encoding = doc.xmlEncoding\n        // `Document.xmlEncoding` is deprecated, and already removed in Firefox\n        // so parse the XML declaration manually\n        || str.match(/^<\\?xml\\s+version\\s*=\\s*[\"']1.\\d+\"\\s+encoding\\s*=\\s*[\"']([A-Za-z0-9._-]*)[\"']/)?.[1]\n    if (encoding && encoding.toLowerCase() !== 'utf-8') {\n        const str = new TextDecoder(encoding).decode(buffer)\n        return parser.parseFromString(str, MIME.XML)\n    }\n    return doc\n}\n\nconst style = URL.createObjectURL(new Blob([`\n@namespace epub \"http://www.idpf.org/2007/ops\";\nbody > img, section > img {\n    display: block;\n    margin: auto;\n}\n.title h1 {\n    text-align: center;\n}\nbody > section > .title, body.notesBodyType > .title {\n    margin: 3em 0;\n}\nbody.notesBodyType > section .title h1 {\n    text-align: start;\n}\nbody.notesBodyType > section .title {\n    margin: 1em 0;\n}\np {\n    text-indent: 1em;\n    margin: 0;\n}\n:not(p) + p, p:first-child {\n    text-indent: 0;\n}\n.poem p {\n    text-indent: 0;\n    margin: 1em 0;\n}\n.text-author, .date {\n    text-align: end;\n}\n.text-author:before {\n    content: \"—\";\n}\ntable {\n    border-collapse: collapse;\n}\ntd, th {\n    padding: .25em;\n}\na[epub|type~=\"noteref\"] {\n    font-size: .75em;\n    vertical-align: super;\n}\nbody:not(.notesBodyType) > .title, body:not(.notesBodyType) > .epigraph {\n    margin: 3em 0;\n}\n`], { type: 'text/css' }))\n\nconst template = html => `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n    <head><link href=\"${style}\" rel=\"stylesheet\" type=\"text/css\"/></head>\n    <body>${html}</body>\n</html>`\n\n// name of custom ID attribute for TOC items\nconst dataID = 'data-foliate-id'\n\nexport const makeFB2 = async blob => {\n    const book = {}\n    const doc = await parseXML(blob)\n    const converter = new FB2Converter(doc)\n\n    const $ = x => doc.querySelector(x)\n    const $$ = x => [...doc.querySelectorAll(x)]\n    const getPerson = el => {\n        const nick = getElementText(el.querySelector('nickname'))\n        if (nick) return nick\n        const first = getElementText(el.querySelector('first-name'))\n        const middle = getElementText(el.querySelector('middle-name'))\n        const last = getElementText(el.querySelector('last-name'))\n        const name = [first, middle, last].filter(x => x).join(' ')\n        const sortAs = last\n            ? [last, [first, middle].filter(x => x).join(' ')].join(', ')\n            : null\n        return { name, sortAs }\n    }\n    const getDate = el => el?.getAttribute('value') ?? getElementText(el)\n    const annotation = $('title-info annotation')\n    book.metadata = {\n        title: getElementText($('title-info book-title')),\n        identifier: getElementText($('document-info id')),\n        language: getElementText($('title-info lang')),\n        author: $$('title-info author').map(getPerson),\n        translator: $$('title-info translator').map(getPerson),\n        contributor: $$('document-info author').map(getPerson)\n            // techincially the program probably shouldn't get the `bkp` role\n            // but it has been so used by calibre, so ¯\\_(ツ)_/¯\n            .concat($$('document-info program-used').map(getElementText))\n            .map(x => Object.assign(typeof x === 'string' ? { name: x } : x,\n                { role: 'bkp' })),\n        publisher: getElementText($('publish-info publisher')),\n        published: getDate($('title-info date')),\n        modified: getDate($('document-info date')),\n        description: annotation ? converter.convert(annotation,\n            { annotation: ['div', SECTION] }).innerHTML : null,\n        subject: $$('title-info genre').map(getElementText),\n    }\n    if ($('coverpage image')) {\n        const src = converter.getImageSrc($('coverpage image'))\n        book.getCover = () => fetch(src).then(res => res.blob())\n    } else book.getCover = () => null\n\n    // get convert each body\n    const bodyData = Array.from(doc.querySelectorAll('body'), body => {\n        const converted = converter.convert(body, { body: ['body', BODY] })\n        return [Array.from(converted.children, el => {\n            // get list of IDs in the section\n            const ids = [el, ...el.querySelectorAll('[id]')].map(el => el.id)\n            return { el, ids }\n        }), converted]\n    })\n\n    const urls = []\n    const sectionData = bodyData[0][0]\n        // make a separate section for each section in the first body\n        .map(({ el, ids }) => {\n            // set up titles for TOC\n            const titles = Array.from(\n                el.querySelectorAll(':scope > section > .title'),\n                (el, index) => {\n                    el.setAttribute(dataID, index)\n                    return { title: getElementText(el), index }\n                })\n            return { ids, titles, el }\n        })\n        // for additional bodies, only make one section for each body\n        .concat(bodyData.slice(1).map(([sections, body]) => {\n            const ids = sections.map(s => s.ids).flat()\n            body.classList.add('notesBodyType')\n            return { ids, el: body, linear: 'no' }\n        }))\n        .map(({ ids, titles, el, linear }) => {\n            const str = template(el.outerHTML)\n            const blob = new Blob([str], { type: MIME.XHTML })\n            const url = URL.createObjectURL(blob)\n            urls.push(url)\n            const title = normalizeWhitespace(\n                el.querySelector('.title, .subtitle, p')?.textContent\n                ?? (el.classList.contains('title') ? el.textContent : ''))\n            return {\n                ids, title, titles, load: () => url,\n                createDocument: () => new DOMParser().parseFromString(str, MIME.XHTML),\n                // doo't count image data as it'd skew the size too much\n                size: blob.size - Array.from(el.querySelectorAll('[src]'),\n                    el => el.getAttribute('src')?.length ?? 0)\n                    .reduce((a, b) => a + b, 0),\n                linear,\n            }\n        })\n\n    const idMap = new Map()\n    book.sections = sectionData.map((section, index) => {\n        const { ids, load, createDocument, size, linear } = section\n        for (const id of ids) if (id) idMap.set(id, index)\n        return { id: index, load, createDocument, size, linear }\n    })\n\n    book.toc = sectionData.map(({ title, titles }, index) => {\n        const id = index.toString()\n        return {\n            label: title,\n            href: id,\n            subitems: titles?.length ? titles.map(({ title, index }) => ({\n                label: title,\n                href: `${id}#${index}`,\n            })) : null,\n        }\n    }).filter(item => item)\n\n    book.resolveHref = href => {\n        const [a, b] = href.split('#')\n        return a\n            // the link is from the TOC\n            ? { index: Number(a), anchor: doc => doc.querySelector(`[${dataID}=\"${b}\"]`) }\n            // link from within the page\n            : { index: idMap.get(b), anchor: doc => doc.getElementById(b) }\n    }\n    book.splitTOCHref = href => href?.split('#')?.map(x => Number(x)) ?? []\n    book.getTOCFragment = (doc, id) => doc.querySelector(`[${dataID}=\"${id}\"]`)\n\n    book.destroy = () => {\n        for (const url of urls) URL.revokeObjectURL(url)\n    }\n    return book\n}\n"],"names":["normalizeWhitespace","str","getElementText","el","NS","MIME","STYLE","TABLE","POEM","SECTION","BODY","FB2Converter","fb2","href","id","bin","node","child","def","d","name","opts","attrs","attr","value","childDef","childEl","parseXML","blob","buffer","parser","doc","encoding","style","template","html","dataID","makeFB2","book","converter","$","x","$$","getPerson","nick","first","middle","last","sortAs","getDate","annotation","src","res","bodyData","body","converted","ids","urls","sectionData","titles","index","sections","s","linear","url","title","a","b","idMap","section","load","createDocument","size","item"],"mappings":"AAAA,MAAMA,EAAsBC,GAAOA,EAAMA,EACpC,QAAQ,gBAAiB,GAAG,EAC5B,QAAQ,gBAAiB,EAAE,EAC3B,QAAQ,gBAAiB,EAAE,EAAI,GAC9BC,EAAiBC,GAAMH,EAAoBG,GAAI,WAAW,EAE1DC,EAAK,CACP,MAAO,+BACP,KAAM,8BACV,EAEMC,EAAO,CACT,IAAK,kBACL,MAAO,uBACX,EAEMC,EAAQ,CACV,OAAU,CAAC,SAAU,MAAM,EAC3B,SAAY,CAAC,KAAM,MAAM,EACzB,MAAS,CAAC,OAAQ,MAAM,EACxB,EAAK,SACL,cAAiB,CAAC,IAAK,MAAM,EAC7B,IAAO,CAAC,MAAO,MAAM,EACrB,IAAO,CAAC,MAAO,MAAM,EACrB,KAAQ,CAAC,OAAQ,MAAM,EACvB,MAAS,OACb,EAEMC,EAAQ,CACV,GAAM,CAAC,KAAM,CACT,GAAM,CAAC,KAAMD,EAAO,CAAC,UAAW,UAAW,QAAS,QAAQ,CAAC,EAC7D,GAAM,CAAC,KAAMA,EAAO,CAAC,UAAW,UAAW,QAAS,QAAQ,CAAC,CACrE,EAAO,CAAC,OAAO,CAAC,CAChB,EAEME,EAAO,CACT,SAAY,CAAC,YAAY,EACzB,SAAY,CAAC,KAAMF,CAAK,EACxB,cAAe,CAAC,IAAKA,CAAK,EAC1B,KAAQ,CAAC,IAAKA,CAAK,EACnB,OAAU,QACd,EAEMG,EAAU,CACZ,MAAS,CAAC,SAAU,CAChB,EAAK,CAAC,KAAMH,CAAK,EACjB,aAAc,CAAC,IAAI,CAC3B,CAAK,EACD,SAAY,CAAC,aAAc,MAAM,EACjC,MAAS,QACT,WAAc,CAAC,OAAO,EACtB,QAAW,CAAC,UAAW,MAAM,EAC7B,EAAK,CAAC,IAAKA,CAAK,EAChB,KAAQ,CAAC,aAAcE,CAAI,EAC3B,SAAY,CAAC,KAAMF,CAAK,EACxB,KAAQ,CAAC,aAAc,MAAM,EAC7B,aAAc,CAAC,IAAI,EACnB,MAAS,CAAC,QAASC,CAAK,EACxB,cAAe,CAAC,IAAKD,CAAK,CAC9B,EACAE,EAAK,SAAY,KAAKC,CAAO,EAE7B,MAAMC,EAAO,CACT,MAAS,QACT,MAAS,CAAC,UAAW,CACjB,EAAK,CAAC,KAAMJ,CAAK,EACjB,aAAc,CAAC,IAAI,CAC3B,CAAK,EACD,SAAY,CAAC,UAAWG,CAAO,EAC/B,QAAW,CAAC,UAAWA,CAAO,CAClC,EAEA,MAAME,CAAa,CACf,YAAYC,EAAK,CACb,KAAK,IAAMA,EACX,KAAK,IAAM,SAAS,eAAe,eAAeR,EAAG,MAAO,MAAM,EAGlE,KAAK,KAAO,IAAI,IAAI,MAAM,KAAK,KAAK,IAAI,qBAAqB,QAAQ,EACjED,GAAM,CAACA,EAAG,GAAIA,CAAE,CAAC,CAAC,CAC1B,CACA,YAAYA,EAAI,CACZ,MAAMU,EAAOV,EAAG,eAAeC,EAAG,MAAO,MAAM,EAC/C,GAAI,CAACS,EAAM,MAAO,SAClB,KAAM,EAAGC,CAAE,EAAID,EAAK,MAAM,GAAG,EAC7B,GAAI,CAACC,EAAI,OAAOD,EAChB,MAAME,EAAM,KAAK,KAAK,IAAID,CAAE,EAC5B,OAAOC,EACD,QAAQA,EAAI,aAAa,cAAc,CAAC,WAAWA,EAAI,WAAW,GAClEF,CACV,CACA,MAAMG,EAAM,CACR,MAAMb,EAAK,KAAK,IAAI,cAAc,KAAK,EACvC,OAAAA,EAAG,IAAMa,EAAK,aAAa,KAAK,EAChCb,EAAG,MAAQa,EAAK,aAAa,OAAO,EACpCb,EAAG,aAAa,MAAO,KAAK,YAAYa,CAAI,CAAC,EACtCb,CACX,CACA,OAAOa,EAAM,CACT,MAAMb,EAAK,KAAK,QAAQa,EAAM,CAAE,EAAK,CAAC,IAAKV,CAAK,CAAC,CAAE,EACnD,OAAAH,EAAG,aAAa,OAAQa,EAAK,eAAeZ,EAAG,MAAO,MAAM,CAAC,EACzDY,EAAK,aAAa,MAAM,IAAM,QAC9Bb,EAAG,eAAeC,EAAG,KAAM,YAAa,SAAS,EAC9CD,CACX,CACA,OAAOa,EAAM,CACT,MAAMb,EAAK,KAAK,QAAQa,EAAM,CAC1B,OAAU,CAAC,IAAK,CACZ,MAAS,CAAC,SAAU,CAChB,EAAK,CAAC,SAAUV,CAAK,EACrB,aAAc,CAAC,IAAI,CACvC,CAAiB,EACD,SAAY,CAAC,IAAKA,CAAK,CACvC,CAAa,CACb,CAAS,EACD,UAAWW,KAASD,EAAK,SAAcC,EAAM,WAAa,MACtDd,EAAG,OAAO,KAAK,IAAI,eAAec,EAAM,WAAW,CAAC,EACpDd,EAAG,OAAO,KAAK,IAAI,cAAc,IAAI,CAAC,GAE1C,OAAOA,CACX,CACA,QAAQa,EAAME,EAAK,CAEf,GAAIF,EAAK,WAAa,EAAG,OAAO,KAAK,IAAI,eAAeA,EAAK,WAAW,EACxE,GAAIA,EAAK,WAAa,EAAG,OAAO,KAAK,IAAI,mBAAmBA,EAAK,WAAW,EAC5E,GAAIA,EAAK,WAAa,EAAG,OAAO,KAAK,IAAI,cAAcA,EAAK,WAAW,EAEvE,MAAMG,EAAID,IAAMF,EAAK,QAAQ,EAC7B,GAAI,CAACG,EAAG,OAAO,KACf,GAAI,OAAOA,GAAM,SAAU,OAAO,KAAKA,CAAC,EAAEH,CAAI,EAE9C,KAAM,CAACI,EAAMC,EAAMC,CAAK,EAAIH,EACtBhB,EAAK,KAAK,IAAI,cAAciB,CAAI,EAOtC,GAJIJ,EAAK,KAAIb,EAAG,GAAKa,EAAK,IAC1Bb,EAAG,UAAU,IAAIa,EAAK,QAAQ,EAG1B,MAAM,QAAQM,CAAK,EAAG,UAAWC,KAAQD,EAAO,CAChD,MAAME,EAAQR,EAAK,aAAaO,CAAI,EAChCC,GAAOrB,EAAG,aAAaoB,EAAMC,CAAK,CAC1C,CAGA,MAAMC,EAAWJ,IAAS,OAASH,EAAMG,EACzC,IAAIJ,EAAQD,EAAK,WACjB,KAAOC,GAAO,CACV,MAAMS,EAAU,KAAK,QAAQT,EAAOQ,CAAQ,EACxCC,GAASvB,EAAG,OAAOuB,CAAO,EAC9BT,EAAQA,EAAM,WAClB,CACA,OAAOd,CACX,CACJ,CAEA,MAAMwB,EAAW,MAAMC,GAAQ,CAC3B,MAAMC,EAAS,MAAMD,EAAK,YAAW,EAC/B3B,EAAM,IAAI,YAAY,OAAO,EAAE,OAAO4B,CAAM,EAC5CC,EAAS,IAAI,UACbC,EAAMD,EAAO,gBAAgB7B,EAAKI,EAAK,GAAG,EAC1C2B,EAAWD,EAAI,aAGd9B,EAAI,MAAM,+EAA+E,IAAI,CAAC,EACrG,GAAI+B,GAAYA,EAAS,YAAW,IAAO,QAAS,CAChD,MAAM/B,EAAM,IAAI,YAAY+B,CAAQ,EAAE,OAAOH,CAAM,EACnD,OAAOC,EAAO,gBAAgB7B,EAAKI,EAAK,GAAG,CAC/C,CACA,OAAO0B,CACX,EAEME,EAAQ,IAAI,gBAAgB,IAAI,KAAK,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAgD3C,EAAG,CAAE,KAAM,WAAY,CAAC,EAEnBC,EAAWC,GAAQ;AAAA;AAAA,wBAEDF,CAAK;AAAA,YACjBE,CAAI;AAAA,SAIVC,EAAS,kBAEFC,EAAU,MAAMT,GAAQ,CACjC,MAAMU,EAAO,CAAA,EACPP,EAAM,MAAMJ,EAASC,CAAI,EACzBW,EAAY,IAAI5B,EAAaoB,CAAG,EAEhCS,EAAIC,GAAKV,EAAI,cAAcU,CAAC,EAC5BC,EAAKD,GAAK,CAAC,GAAGV,EAAI,iBAAiBU,CAAC,CAAC,EACrCE,EAAYxC,GAAM,CACpB,MAAMyC,EAAO1C,EAAeC,EAAG,cAAc,UAAU,CAAC,EACxD,GAAIyC,EAAM,OAAOA,EACjB,MAAMC,EAAQ3C,EAAeC,EAAG,cAAc,YAAY,CAAC,EACrD2C,EAAS5C,EAAeC,EAAG,cAAc,aAAa,CAAC,EACvD4C,EAAO7C,EAAeC,EAAG,cAAc,WAAW,CAAC,EACnDiB,EAAO,CAACyB,EAAOC,EAAQC,CAAI,EAAE,OAAON,GAAKA,CAAC,EAAE,KAAK,GAAG,EACpDO,EAASD,EACT,CAACA,EAAM,CAACF,EAAOC,CAAM,EAAE,OAAOL,GAAKA,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,IAAI,EAC1D,KACN,MAAO,CAAE,KAAArB,EAAM,OAAA4B,CAAM,CACzB,EACMC,EAAU9C,GAAMA,GAAI,aAAa,OAAO,GAAKD,EAAeC,CAAE,EAC9D+C,EAAaV,EAAE,uBAAuB,EAoB5C,GAnBAF,EAAK,SAAW,CACZ,MAAOpC,EAAesC,EAAE,uBAAuB,CAAC,EAChD,WAAYtC,EAAesC,EAAE,kBAAkB,CAAC,EAChD,SAAUtC,EAAesC,EAAE,iBAAiB,CAAC,EAC7C,OAAQE,EAAG,mBAAmB,EAAE,IAAIC,CAAS,EAC7C,WAAYD,EAAG,uBAAuB,EAAE,IAAIC,CAAS,EACrD,YAAaD,EAAG,sBAAsB,EAAE,IAAIC,CAAS,EAGhD,OAAOD,EAAG,4BAA4B,EAAE,IAAIxC,CAAc,CAAC,EAC3D,IAAIuC,GAAK,OAAO,OAAO,OAAOA,GAAM,SAAW,CAAE,KAAMA,CAAC,EAAKA,EAC1D,CAAE,KAAM,KAAK,CAAE,CAAC,EACxB,UAAWvC,EAAesC,EAAE,wBAAwB,CAAC,EACrD,UAAWS,EAAQT,EAAE,iBAAiB,CAAC,EACvC,SAAUS,EAAQT,EAAE,oBAAoB,CAAC,EACzC,YAAaU,EAAaX,EAAU,QAAQW,EACxC,CAAE,WAAY,CAAC,MAAOzC,CAAO,CAAC,CAAE,EAAE,UAAY,KAClD,QAASiC,EAAG,kBAAkB,EAAE,IAAIxC,CAAc,CAC1D,EACQsC,EAAE,iBAAiB,EAAG,CACtB,MAAMW,EAAMZ,EAAU,YAAYC,EAAE,iBAAiB,CAAC,EACtDF,EAAK,SAAW,IAAM,MAAMa,CAAG,EAAE,KAAKC,GAAOA,EAAI,KAAI,CAAE,CAC3D,MAAOd,EAAK,SAAW,IAAM,KAG7B,MAAMe,EAAW,MAAM,KAAKtB,EAAI,iBAAiB,MAAM,EAAGuB,GAAQ,CAC9D,MAAMC,EAAYhB,EAAU,QAAQe,EAAM,CAAE,KAAM,CAAC,OAAQ5C,CAAI,CAAC,CAAE,EAClE,MAAO,CAAC,MAAM,KAAK6C,EAAU,SAAUpD,GAAM,CAEzC,MAAMqD,EAAM,CAACrD,EAAI,GAAGA,EAAG,iBAAiB,MAAM,CAAC,EAAE,IAAIA,GAAMA,EAAG,EAAE,EAChE,MAAO,CAAE,GAAAA,EAAI,IAAAqD,CAAG,CACpB,CAAC,EAAGD,CAAS,CACjB,CAAC,EAEKE,EAAO,CAAA,EACPC,EAAcL,EAAS,CAAC,EAAE,CAAC,EAE5B,IAAI,CAAC,CAAE,GAAAlD,EAAI,IAAAqD,KAAU,CAElB,MAAMG,EAAS,MAAM,KACjBxD,EAAG,iBAAiB,2BAA2B,EAC/C,CAACA,EAAIyD,KACDzD,EAAG,aAAaiC,EAAQwB,CAAK,EACtB,CAAE,MAAO1D,EAAeC,CAAE,EAAG,MAAAyD,CAAK,EAC5C,EACL,MAAO,CAAE,IAAAJ,EAAK,OAAAG,EAAQ,GAAAxD,CAAE,CAC5B,CAAC,EAEA,OAAOkD,EAAS,MAAM,CAAC,EAAE,IAAI,CAAC,CAACQ,EAAUP,CAAI,IAAM,CAChD,MAAME,EAAMK,EAAS,IAAIC,GAAKA,EAAE,GAAG,EAAE,KAAI,EACzC,OAAAR,EAAK,UAAU,IAAI,eAAe,EAC3B,CAAE,IAAAE,EAAK,GAAIF,EAAM,OAAQ,IAAI,CACxC,CAAC,CAAC,EACD,IAAI,CAAC,CAAE,IAAAE,EAAK,OAAAG,EAAQ,GAAAxD,EAAI,OAAA4D,CAAM,IAAO,CAClC,MAAM9D,EAAMiC,EAAS/B,EAAG,SAAS,EAC3ByB,EAAO,IAAI,KAAK,CAAC3B,CAAG,EAAG,CAAE,KAAMI,EAAK,KAAK,CAAE,EAC3C2D,EAAM,IAAI,gBAAgBpC,CAAI,EACpC6B,EAAK,KAAKO,CAAG,EACb,MAAMC,EAAQjE,EACVG,EAAG,cAAc,sBAAsB,GAAG,cACtCA,EAAG,UAAU,SAAS,OAAO,EAAIA,EAAG,YAAc,GAAG,EAC7D,MAAO,CACH,IAAAqD,EAAK,MAAAS,EAAO,OAAAN,EAAQ,KAAM,IAAMK,EAChC,eAAgB,IAAM,IAAI,UAAS,EAAG,gBAAgB/D,EAAKI,EAAK,KAAK,EAErE,KAAMuB,EAAK,KAAO,MAAM,KAAKzB,EAAG,iBAAiB,OAAO,EACpDA,GAAMA,EAAG,aAAa,KAAK,GAAG,QAAU,CAAC,EACxC,OAAO,CAAC+D,EAAGC,IAAMD,EAAIC,EAAG,CAAC,EAC9B,OAAAJ,CAChB,CACQ,CAAC,EAECK,EAAQ,IAAI,IAClB,OAAA9B,EAAK,SAAWoB,EAAY,IAAI,CAACW,EAAST,IAAU,CAChD,KAAM,CAAE,IAAAJ,EAAK,KAAAc,EAAM,eAAAC,EAAgB,KAAAC,EAAM,OAAAT,CAAM,EAAKM,EACpD,UAAWvD,KAAM0C,EAAS1C,GAAIsD,EAAM,IAAItD,EAAI8C,CAAK,EACjD,MAAO,CAAE,GAAIA,EAAO,KAAAU,EAAM,eAAAC,EAAgB,KAAAC,EAAM,OAAAT,CAAM,CAC1D,CAAC,EAEDzB,EAAK,IAAMoB,EAAY,IAAI,CAAC,CAAE,MAAAO,EAAO,OAAAN,CAAM,EAAIC,IAAU,CACrD,MAAM9C,EAAK8C,EAAM,SAAQ,EACzB,MAAO,CACH,MAAOK,EACP,KAAMnD,EACN,SAAU6C,GAAQ,OAASA,EAAO,IAAI,CAAC,CAAE,MAAAM,EAAO,MAAAL,MAAa,CACzD,MAAOK,EACP,KAAM,GAAGnD,CAAE,IAAI8C,CAAK,EACpC,EAAc,EAAI,IAClB,CACI,CAAC,EAAE,OAAOa,GAAQA,CAAI,EAEtBnC,EAAK,YAAczB,GAAQ,CACvB,KAAM,CAACqD,EAAGC,CAAC,EAAItD,EAAK,MAAM,GAAG,EAC7B,OAAOqD,EAED,CAAE,MAAO,OAAOA,CAAC,EAAG,OAAQnC,GAAOA,EAAI,cAAc,IAAIK,CAAM,KAAK+B,CAAC,IAAI,CAAC,EAE1E,CAAE,MAAOC,EAAM,IAAID,CAAC,EAAG,OAAQpC,GAAOA,EAAI,eAAeoC,CAAC,CAAC,CACrE,EACA7B,EAAK,aAAezB,GAAQA,GAAM,MAAM,GAAG,GAAG,IAAI4B,GAAK,OAAOA,CAAC,CAAC,GAAK,CAAA,EACrEH,EAAK,eAAiB,CAACP,EAAKjB,IAAOiB,EAAI,cAAc,IAAIK,CAAM,KAAKtB,CAAE,IAAI,EAE1EwB,EAAK,QAAU,IAAM,CACjB,UAAW0B,KAAOP,EAAM,IAAI,gBAAgBO,CAAG,CACnD,EACO1B,CACX","x_google_ignoreList":[0]}