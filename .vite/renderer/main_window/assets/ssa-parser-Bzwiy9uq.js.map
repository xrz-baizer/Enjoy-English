{"version":3,"mappings":"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","names":["FORMAT_START_RE","STYLE_START_RE","DIALOGUE_START_RE","FORMAT_SPLIT_RE","STYLE_FUNCTION_RE","NEW_LINE_RE","STYLES_SECTION_START_RE","EVENTS_SECTION_START_RE","SSAParser","init","ParseErrorBuilder","line","lineCount","styles","dialogue","cue","values","name","outlineX","align","vertical","marginV","outlineY","outlineColor","bgColor","borderStyle","transform","i","field","value","color","parseColor","_outlineColor","alignment","buildTextShadow","fields","timestamp","VTTCue","voice","marginLeft","marginRight","startTimeText","endTimeText","startTime","parseVTTTimestamp","endTime","error","abgr","alpha","b","g","x","y","noOfShadows","textShadow","theta","createSSAParser"],"ignoreList":[0],"sources":["../../../../node_modules/@vidstack/react/node_modules/media-captions/dist/prod/ssa-parser.js"],"sourcesContent":["import { b as VTTCue, p as parseVTTTimestamp } from './index.js';\n\nconst FORMAT_START_RE = /^Format:[\\s\\t]*/, STYLE_START_RE = /^Style:[\\s\\t]*/, DIALOGUE_START_RE = /^Dialogue:[\\s\\t]*/, FORMAT_SPLIT_RE = /[\\s\\t]*,[\\s\\t]*/, STYLE_FUNCTION_RE = /\\{[^}]+\\}/g, NEW_LINE_RE = /\\\\N/g, STYLES_SECTION_START_RE = /^\\[(.*)[\\s\\t]?Styles\\]$/, EVENTS_SECTION_START_RE = /^\\[(.*)[\\s\\t]?Events\\]$/;\nclass SSAParser {\n  h;\n  O = 0;\n  c = null;\n  l = [];\n  m = [];\n  N = null;\n  f;\n  P = {};\n  async init(init) {\n    this.h = init;\n    if (init.errors)\n      this.f = (await import('./errors.js')).ParseErrorBuilder;\n  }\n  parse(line, lineCount) {\n    if (this.O) {\n      switch (this.O) {\n        case 1:\n          if (line === \"\") {\n            this.O = 0;\n          } else if (STYLE_START_RE.test(line)) {\n            if (this.N) {\n              const styles = line.replace(STYLE_START_RE, \"\").split(FORMAT_SPLIT_RE);\n              this.S(styles);\n            } else {\n              this.g(this.f?.T(\"Style\", lineCount));\n            }\n          } else if (FORMAT_START_RE.test(line)) {\n            this.N = line.replace(FORMAT_START_RE, \"\").split(FORMAT_SPLIT_RE);\n          } else if (EVENTS_SECTION_START_RE.test(line)) {\n            this.N = null;\n            this.O = 2;\n          }\n          break;\n        case 2:\n          if (line === \"\") {\n            this.Q();\n          } else if (DIALOGUE_START_RE.test(line)) {\n            this.Q();\n            if (this.N) {\n              const dialogue = line.replace(DIALOGUE_START_RE, \"\").split(FORMAT_SPLIT_RE), cue = this.U(dialogue, lineCount);\n              if (cue)\n                this.c = cue;\n            } else {\n              this.g(this.f?.T(\"Dialogue\", lineCount));\n            }\n          } else if (this.c) {\n            this.c.text += \"\\n\" + line.replace(STYLE_FUNCTION_RE, \"\").replace(NEW_LINE_RE, \"\\n\");\n          } else if (FORMAT_START_RE.test(line)) {\n            this.N = line.replace(FORMAT_START_RE, \"\").split(FORMAT_SPLIT_RE);\n          } else if (STYLES_SECTION_START_RE.test(line)) {\n            this.N = null;\n            this.O = 1;\n          } else if (EVENTS_SECTION_START_RE.test(line)) {\n            this.N = null;\n          }\n      }\n    } else if (line === \"\") ; else if (STYLES_SECTION_START_RE.test(line)) {\n      this.N = null;\n      this.O = 1;\n    } else if (EVENTS_SECTION_START_RE.test(line)) {\n      this.N = null;\n      this.O = 2;\n    }\n  }\n  done() {\n    return {\n      metadata: {},\n      cues: this.l,\n      regions: [],\n      errors: this.m\n    };\n  }\n  Q() {\n    if (!this.c)\n      return;\n    this.l.push(this.c);\n    this.h.onCue?.(this.c);\n    this.c = null;\n  }\n  S(values) {\n    let name = \"Default\", styles = {}, outlineX, align = \"center\", vertical = \"bottom\", marginV, outlineY = 1.2, outlineColor, bgColor, borderStyle = 3, transform = [];\n    for (let i = 0; i < this.N.length; i++) {\n      const field = this.N[i], value = values[i];\n      switch (field) {\n        case \"Name\":\n          name = value;\n          break;\n        case \"Fontname\":\n          styles[\"font-family\"] = value;\n          break;\n        case \"Fontsize\":\n          styles[\"font-size\"] = `calc(${value} / var(--overlay-height))`;\n          break;\n        case \"PrimaryColour\":\n          const color = parseColor(value);\n          if (color)\n            styles[\"--cue-color\"] = color;\n          break;\n        case \"BorderStyle\":\n          borderStyle = parseInt(value, 10);\n          break;\n        case \"BackColour\":\n          bgColor = parseColor(value);\n          break;\n        case \"OutlineColour\":\n          const _outlineColor = parseColor(value);\n          if (_outlineColor)\n            outlineColor = _outlineColor;\n          break;\n        case \"Bold\":\n          if (parseInt(value))\n            styles[\"font-weight\"] = \"bold\";\n          break;\n        case \"Italic\":\n          if (parseInt(value))\n            styles[\"font-style\"] = \"italic\";\n          break;\n        case \"Underline\":\n          if (parseInt(value))\n            styles[\"text-decoration\"] = \"underline\";\n          break;\n        case \"StrikeOut\":\n          if (parseInt(value))\n            styles[\"text-decoration\"] = \"line-through\";\n          break;\n        case \"Spacing\":\n          styles[\"letter-spacing\"] = value + \"px\";\n          break;\n        case \"AlphaLevel\":\n          styles[\"opacity\"] = parseFloat(value);\n          break;\n        case \"ScaleX\":\n          transform.push(`scaleX(${parseFloat(value) / 100})`);\n          break;\n        case \"ScaleY\":\n          transform.push(`scaleY(${parseFloat(value) / 100})`);\n          break;\n        case \"Angle\":\n          transform.push(`rotate(${value}deg)`);\n          break;\n        case \"Shadow\":\n          outlineY = parseInt(value, 10) * 1.2;\n          break;\n        case \"MarginL\":\n          styles[\"--cue-width\"] = \"auto\";\n          styles[\"--cue-left\"] = parseFloat(value) + \"px\";\n          break;\n        case \"MarginR\":\n          styles[\"--cue-width\"] = \"auto\";\n          styles[\"--cue-right\"] = parseFloat(value) + \"px\";\n          break;\n        case \"MarginV\":\n          marginV = parseFloat(value);\n          break;\n        case \"Outline\":\n          outlineX = parseInt(value, 10);\n          break;\n        case \"Alignment\":\n          const alignment = parseInt(value, 10);\n          if (alignment >= 4)\n            vertical = alignment >= 7 ? \"top\" : \"center\";\n          switch (alignment % 3) {\n            case 1:\n              align = \"start\";\n              break;\n            case 2:\n              align = \"center\";\n              break;\n            case 3:\n              align = \"end\";\n              break;\n          }\n      }\n    }\n    styles.R = vertical;\n    styles[\"--cue-white-space\"] = \"normal\";\n    styles[\"--cue-line-height\"] = \"normal\";\n    styles[\"--cue-text-align\"] = align;\n    if (vertical === \"center\") {\n      styles[`--cue-top`] = \"50%\";\n      transform.push(\"translateY(-50%)\");\n    } else {\n      styles[`--cue-${vertical}`] = (marginV || 0) + \"px\";\n    }\n    if (borderStyle === 1) {\n      styles[\"--cue-padding-y\"] = \"0\";\n    }\n    if (borderStyle === 1 || bgColor) {\n      styles[\"--cue-bg-color\"] = borderStyle === 1 ? \"none\" : bgColor;\n    }\n    if (borderStyle === 3 && outlineColor) {\n      styles[\"--cue-outline\"] = `${outlineX}px solid ${outlineColor}`;\n    }\n    if (borderStyle === 1 && typeof outlineX === \"number\") {\n      const color = bgColor ?? \"#000\";\n      styles[\"--cue-text-shadow\"] = [\n        outlineColor && buildTextShadow(outlineX * 1.2, outlineY * 1.2, outlineColor),\n        outlineColor ? buildTextShadow(outlineX * (outlineX / 2), outlineY * (outlineX / 2), color) : buildTextShadow(outlineX, outlineY, color)\n      ].filter(Boolean).join(\", \");\n    }\n    if (transform.length)\n      styles[\"--cue-transform\"] = transform.join(\" \");\n    this.P[name] = styles;\n  }\n  U(values, lineCount) {\n    const fields = this.V(values);\n    const timestamp = this.q(fields.Start, fields.End, lineCount);\n    if (!timestamp)\n      return;\n    const cue = new VTTCue(timestamp[0], timestamp[1], \"\"), styles = { ...this.P[fields.Style] || {} }, voice = fields.Name ? `<v ${fields.Name}>` : \"\";\n    const vertical = styles.R, marginLeft = fields.MarginL && parseFloat(fields.MarginL), marginRight = fields.MarginR && parseFloat(fields.MarginR), marginV = fields.MarginV && parseFloat(fields.MarginV);\n    if (marginLeft) {\n      styles[\"--cue-width\"] = \"auto\";\n      styles[\"--cue-left\"] = marginLeft + \"px\";\n    }\n    if (marginRight) {\n      styles[\"--cue-width\"] = \"auto\";\n      styles[\"--cue-right\"] = marginRight + \"px\";\n    }\n    if (marginV && vertical !== \"center\") {\n      styles[`--cue-${vertical}`] = marginV + \"px\";\n    }\n    cue.text = voice + values.slice(this.N.length - 1).join(\", \").replace(STYLE_FUNCTION_RE, \"\").replace(NEW_LINE_RE, \"\\n\");\n    delete styles.R;\n    if (Object.keys(styles).length)\n      cue.style = styles;\n    return cue;\n  }\n  V(values) {\n    const fields = {};\n    for (let i = 0; i < this.N.length; i++) {\n      fields[this.N[i]] = values[i];\n    }\n    return fields;\n  }\n  q(startTimeText, endTimeText, lineCount) {\n    const startTime = parseVTTTimestamp(startTimeText), endTime = parseVTTTimestamp(endTimeText);\n    if (startTime !== null && endTime !== null && endTime > startTime) {\n      return [startTime, endTime];\n    } else {\n      if (startTime === null) {\n        this.g(this.f?.s(startTimeText, lineCount));\n      }\n      if (endTime === null) {\n        this.g(this.f?.t(endTimeText, lineCount));\n      }\n      if (startTime != null && endTime !== null && endTime > startTime) {\n        this.g(this.f?.u(startTime, endTime, lineCount));\n      }\n    }\n  }\n  g(error) {\n    if (!error)\n      return;\n    this.m.push(error);\n    if (this.h.strict) {\n      this.h.cancel();\n      throw error;\n    } else {\n      this.h.onError?.(error);\n    }\n  }\n}\nfunction parseColor(color) {\n  const abgr = parseInt(color.replace(\"&H\", \"\"), 16);\n  if (abgr >= 0) {\n    const a = abgr >> 24 & 255 ^ 255;\n    const alpha = a / 255;\n    const b = abgr >> 16 & 255;\n    const g = abgr >> 8 & 255;\n    const r = abgr & 255;\n    return \"rgba(\" + [r, g, b, alpha].join(\",\") + \")\";\n  }\n  return null;\n}\nfunction buildTextShadow(x, y, color) {\n  const noOfShadows = Math.ceil(2 * Math.PI * x);\n  let textShadow = \"\";\n  for (let i = 0; i < noOfShadows; i++) {\n    const theta = 2 * Math.PI * i / noOfShadows;\n    textShadow += x * Math.cos(theta) + \"px \" + y * Math.sin(theta) + \"px 0 \" + color + (i == noOfShadows - 1 ? \"\" : \",\");\n  }\n  return textShadow;\n}\nfunction createSSAParser() {\n  return new SSAParser();\n}\n\nexport { SSAParser, createSSAParser as default };\n"],"file":"assets/ssa-parser-Bzwiy9uq.js"}